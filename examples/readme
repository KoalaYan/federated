
Usage example for federated_thzdata_sample_2NN.py.
Run 

python federated_thzdata_sample_2NN.py -h 

or 

python federated_thzdata_sample_CNN.py -h 

for help 


federated_thzdata_sample_CNN.py [-h] [-l1 L1] [-l2 L2] [-mu MU]
                                [-eps EPS] [-K K] [-N N] [-T T]
                                [-ro RO]

optional arguments:
  -h, --help  show this help message and exit
  -l1 L1      sets the learning rate (gradient exchange) for convolutional
              layer
  -l2 L2      sets the learning rate (gradient exchange) for FC layer
  -mu MU      sets the learning rate for local SGD
  -eps EPS    sets the mixing parameters for model averaging (CFA)
  -K K        sets the number of network devices
  -N N        sets the number of neighbors per device
  -T T        sets the number of training epochs
  -ro RO      sets the hyperparameter for MEWMA


Example 1 
python federated_thzdata_sample_CNN.py -l1 0.025 -l2 0.02 -K 40 -N 2 -T 40 -ro 0.99
Use convolutional layers followed by a FC layer. Sets gradient learning rate for hidden layer to 0.025, for output layer to 0.02, K=40 devices, N=2 neighbors per device, MEWMA parameter 0.99 (see paper)


Example 2
python federated_thzdata_sample_2NN.py -l1 0.01 -l2 0.015 -N 2 -T 40 -ro 0.99
Use FC layers. Sets gradient learning rate for hidden layer to 0.01, for output layer to 0.015, K=80 devices (default), N=2 neighbors per device, MEWMA parameter 0.99 (see paper)
